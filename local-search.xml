<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>How to let Where2comm work on V2X-Sim-2 dataset?</title>
    <link href="/blog/2024/08/15/where2comm/"/>
    <url>/blog/2024/08/15/where2comm/</url>
    
    <content type="html"><![CDATA[<h1 id="Implement-Where2comm-with-V2X-Sim-2-dataset"><a href="#Implement-Where2comm-with-V2X-Sim-2-dataset" class="headerlink" title="Implement Where2comm with V2X-Sim-2 dataset"></a>Implement Where2comm with V2X-Sim-2 dataset</h1><hr><p><strong>Author: Yihang Tao</strong></p><blockquote><p><em>Where2comm published its code implementation with DAIR-V2X dataset, while has not yet released code working on V2X-Sim-2 dataset.</em></p></blockquote><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><strong>Where2comm</strong> (<em>Hu et al., Neurips 2022</em>), a classic and milestone-like collaborative perception method, has only open its code implementation on DAIR-V2X dataset. However, there is only one ego vehicle in DAIR-V2X dataset, for those who wanna do experiments with multi-vehicle collaborative perception dataset (e.g., V2X-Sim-2 datset) and take Where2comm as baseline, itâ€™s still not convenient enough to realize. This article will introduce a method to smoothly train&#x2F;test Where2comm model on V2X-Sim-2 dataset.</p><p><strong>The key points are highlighted here:</strong></p><ul><li><input checked="" disabled="" type="checkbox"> Download <a href="https://github.com/MediaBrain-SJTU/Where2comm?tab=readme-ov-file">Where2comm</a> as main project.</li><li><input checked="" disabled="" type="checkbox"> Download <a href="https://github.com/yifanlu0227/HEAL">HEAL</a> as auxiliary project.</li><li><input checked="" disabled="" type="checkbox"> Download <a href="https://ai4ce.github.io/V2X-Sim/">V2X-Sim-2</a> dataset.</li></ul><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><h4 id="1-Merge-HEAL-and-Where2comm"><a href="#1-Merge-HEAL-and-Where2comm" class="headerlink" title="1. Merge HEAL and Where2comm"></a>1. Merge HEAL and Where2comm</h4><p>Download HEAL and Where2comm</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">https</span>://github.com/MediaBrain-SJTU/Where2comm.git<br>cd Where2comm<br>git <span class="hljs-keyword">clone</span> <span class="hljs-title">https</span>://github.com/yifanlu0227/HEAL.git<br></code></pre></td></tr></table></figure><p>Substitute tools, utils, and visualization</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf opencood/tools<br><span class="hljs-built_in">rm</span> -rf opencood/utils<br><span class="hljs-built_in">rm</span> -rf opencood/visualization<br><span class="hljs-built_in">cp</span> -r HEAL/opencood/tools/ opencood/tools<br><span class="hljs-built_in">cp</span> -r HEAL/opencood/utils/ opencood/utils<br><span class="hljs-built_in">cp</span> -r HEAL/opencood/visualization/ opencood/visualization<br></code></pre></td></tr></table></figure><p>Create a new directory and download complement .yaml file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> opencood/hypes_yaml/v2xsim2<br>wget https://github.com/yihangtao/Where2comm-V2X-Sim/blob/main/Where2comm/opencood/hypes_yaml/v2xsim2/v2xsim2_where2comm_attn_multiscale_resnet.yaml<br><span class="hljs-built_in">mv</span> v2xsim2_where2comm_attn_multiscale_resnet.yaml opencood/hypes_yaml/v2xsim2/v2xsim2_where2comm_attn_multiscale_resnet.yaml<br></code></pre></td></tr></table></figure><p>Modify opencood&#x2F;data_utils&#x2F;datasets of Where2comm.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm -rf opencood<span class="hljs-regexp">/data_utils/</span>datasets/__init__.py<br>cp HEAL<span class="hljs-regexp">/opencood/</span>data_utils<span class="hljs-regexp">/datasets/</span>__init__.py opencood<span class="hljs-regexp">/data_utils/</span>datasets/<br>cp HEAL<span class="hljs-regexp">/opencood/</span>data_utils<span class="hljs-regexp">/datasets/</span>basedataset<span class="hljs-regexp">/v2xsim_basedataset.py opencood/</span>data_utils<span class="hljs-regexp">/datasets/</span><br>cp HEAL<span class="hljs-regexp">/opencood/</span>data_utils<span class="hljs-regexp">/datasets/i</span>ntermediate_fusion_dataset.py opencood<span class="hljs-regexp">/data_utils/</span>datasets/<br></code></pre></td></tr></table></figure><p>Modify install requirements of Where2comm.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf requirements.txt<br><span class="hljs-built_in">cp</span> HEAL/requirements.txt ./<br></code></pre></td></tr></table></figure><h4 id="2-Environment-setup"><a href="#2-Environment-setup" class="headerlink" title="2. Environment setup"></a>2. Environment setup</h4><p>Install cuda 11.1 and customize installation path (see <a href="https://yihangtao.github.io/blog/2024/08/09/bevformer/#5-Set-CUDA-Path-Important">Set CUDA Path</a> for more details).</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs elixir">conda create --name <span class="hljs-title class_">Where2comm</span> python=<span class="hljs-number">3.7</span> cmake=<span class="hljs-number">3.22</span>.<span class="hljs-number">1</span> cudatoolkit=<span class="hljs-number">11.2</span> cudatoolkit-dev=<span class="hljs-number">11.2</span><br>conda activate <span class="hljs-title class_">Where2comm</span><br>conda install cudnn -c conda-forge<br>conda install boost<br><span class="hljs-comment"># install pytorch</span><br>pip install torch==<span class="hljs-number">1.10</span>.<span class="hljs-number">1</span>+cu111 torchvision==<span class="hljs-number">0.11</span>.<span class="hljs-number">2</span>+cu111 torchaudio==<span class="hljs-number">0.10</span>.<span class="hljs-number">1</span> -f <span class="hljs-symbol">https:</span>//download.pytorch.org/whl/torch_stable.html<br><br><span class="hljs-comment"># option: if there is error or speed issues in install cudatoolkit</span><br><span class="hljs-comment"># could instead specify the PATH, CUDA_HOME, and LD_LIBRARY_PATH, using current cuda</span><br><span class="hljs-comment"># write it to ~/.bashrc, for example use Vim</span><br>vim ~/.bashrc<br>export <span class="hljs-title class_">PATH</span>=[your cuda path]/<span class="hljs-symbol">bin:</span><span class="hljs-variable">$PATH</span><br>export <span class="hljs-title class_">CUDA_HOME</span>=[your cuda path]/<span class="hljs-symbol">bin:</span><span class="hljs-variable">$CUDA_HOME</span><br>export <span class="hljs-title class_">LD_LIBRARY_PATH</span>=[your cuda path]/<span class="hljs-symbol">lib64:</span><span class="hljs-variable">$LD_LIBRARY_PATH</span><br><br><span class="hljs-comment"># add head file search directories </span><br>export <span class="hljs-title class_">C_INCLUDE_PATH</span>=<span class="hljs-variable">$C_INCLUDE_PATH</span><span class="hljs-symbol">:/miniconda3/envs/Where2comm/include</span><br>export <span class="hljs-title class_">CPLUS_INCLUDE_PATH</span>=<span class="hljs-variable">$CPLUS_INCLUDE_PATH</span><span class="hljs-symbol">:/miniconda3/envs/Where2comm/include</span><br><span class="hljs-comment"># add shared library searching directories</span><br>export <span class="hljs-title class_">LIBRARY_PATH</span>=<span class="hljs-variable">$LIBRARY_PATH</span><span class="hljs-symbol">:/miniconda3/envs/Where2comm/lib</span><br><span class="hljs-comment"># add runtime library searching directories</span><br>export <span class="hljs-title class_">LD_LIBRARY_PATH</span>=<span class="hljs-variable">$LD_LIBRARY_PATH</span><span class="hljs-symbol">:/miniconda3/envs/Where2comm/lib</span><br><br><span class="hljs-comment"># go out of Vim and activate it in current shell</span><br>source ~/.bashrc<br><br>conda activate <span class="hljs-title class_">Where2comm</span><br><br><span class="hljs-comment"># clone spconv:</span><br>git clone <span class="hljs-symbol">https:</span>//github.com/traveller59/spconv.git <br>cd spconv<br>git checkout v1.<span class="hljs-number">2.1</span><br>git submodule update --init --recursive<br><br><span class="hljs-comment"># compile</span><br>python setup.py bdist_wheel<br><br><span class="hljs-comment"># install</span><br>cd ./dist<br>pip install spconv<span class="hljs-number">-1.2</span>.<span class="hljs-number">1</span>-cp37-cp37m-linux_x86_64.whl<br><br><span class="hljs-comment"># check if is successfully installed</span><br>python <br><span class="hljs-keyword">import</span> spconv<br></code></pre></td></tr></table></figure><h4 id="3-Install-OpenCOOD"><a href="#3-Install-OpenCOOD" class="headerlink" title="3. Install OpenCOOD"></a>3. Install OpenCOOD</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># install requirements</span><br>pip install -r requirements.txt<br>python setup.py develop<br><br>python opencood<span class="hljs-regexp">/utils/</span>setup.py build_ext --inplace<br>python opencood<span class="hljs-regexp">/pcdet_utils/</span>setup.py build_ext --inplace<br><span class="hljs-comment"># if there is cuda version issue; ssh db92 -p 58122 and customize the cuda home</span><br>CUDA_HOME=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/cuda-11.1/</span> python opencood<span class="hljs-regexp">/pcdet_utils/</span>setup.py build_ext --inplace<br></code></pre></td></tr></table></figure><h4 id="4-Prepare-V2X-Sim-2-dataset"><a href="#4-Prepare-V2X-Sim-2-dataset" class="headerlink" title="4. Prepare V2X-Sim-2 dataset"></a>4. Prepare V2X-Sim-2 dataset</h4><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs smali">mkdir dataset<br><br>Where2comm/dataset<br><span class="hljs-keyword">.</span> <br>â”œâ”€â”€ v2xsim2-complete<br>â”‚   â”œâ”€â”€ lidarseg<br>â”‚   â”œâ”€â”€ maps<br>â”‚   â”œâ”€â”€ sweeps<br>â”‚   â””â”€â”€ v1.0-mini<br>â””â”€â”€ v2xsim2_info<br>    â”œâ”€â”€ v2xsim_infos_test.pkl<br>    â”œâ”€â”€ v2xsim_infos_train.pkl<br>    â””â”€â”€ v2xsim_infos_val.pkl<br></code></pre></td></tr></table></figure><h4 id="5-Basic-Train-Test-Command"><a href="#5-Basic-Train-Test-Command" class="headerlink" title="5. Basic Train &#x2F; Test Command"></a>5. Basic Train &#x2F; Test Command</h4><p>Please refer to <a href="https://github.com/yifanlu0227/HEAL?tab=readme-ov-file#basic-train--test-command">Commands</a> for more details.</p><p>Training process (Terminal)</p><img src="/blog/2024/08/15/where2comm/image.png" class="" title="alt text"><p>Sampled visualization results (opencood&#x2F;logs&#x2F;)</p><img src="/blog/2024/08/15/where2comm/image-1.png" class="" title="alt text"><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>If you wanna directly download the processed project (<strong>skip step 1</strong>), please visit <a href="https://github.com/yihangtao/Where2comm-V2X-Sim">Where2comm+V2X-Sim</a>.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://github.com/yifanlu0227/HEAL?tab=readme-ov-file">https://github.com/yifanlu0227/HEAL?tab=readme-ov-file</a><br>[2] <a href="https://github.com/MediaBrain-SJTU/Where2comm/tree/main">https://github.com/MediaBrain-SJTU/Where2comm/tree/main</a><br>[3] <a href="https://ai4ce.github.io/V2X-Sim/">https://ai4ce.github.io/V2X-Sim/</a></p>]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>100% successful deployment of BEVFormer on Ubuntu 18.04/20.04 Server</title>
    <link href="/blog/2024/08/09/bevformer/"/>
    <url>/blog/2024/08/09/bevformer/</url>
    
    <content type="html"><![CDATA[<h1 id="Deploy-BEVFormer-on-Ubuntu-18-04-22-04"><a href="#Deploy-BEVFormer-on-Ubuntu-18-04-22-04" class="headerlink" title="Deploy BEVFormer on Ubuntu 18.04&#x2F;22.04"></a>Deploy BEVFormer on Ubuntu 18.04&#x2F;22.04</h1><hr><p><strong>Author: Yihang Tao</strong></p><blockquote><p><em>This is a 100% successful instruction for deploying BEVFormer&#x2F;ActFormer on Ubuntu 18.04&#x2F;22.04.</em></p></blockquote><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>For those who wanna do experiments with BEVFormer and are still struggling to configure the environment on Ubuntu 18.04&#x2F;20.04, congratulate you finally find the right place! There may be some strange reasons leading to the failure in running BEVFormer, however, you will make it after following the instructions below.</p><p><strong>The key points are highlighted here:</strong></p><ul><li><input checked="" disabled="" type="checkbox"> Please ensure the <strong>running</strong> cuda version is <strong>11.3</strong>  </li><li><input checked="" disabled="" type="checkbox"> Please ensure the gcc version is higher than <strong>4.0</strong> but lower than <strong>8.0</strong></li><li><input checked="" disabled="" type="checkbox"> Please use mmcv-full higher than <strong>1.3</strong> but lower than <strong>1.4</strong></li></ul><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><h4 id="1-Create-virtual-environment"><a href="#1-Create-virtual-environment" class="headerlink" title="1. Create virtual environment"></a>1. Create virtual environment</h4><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gauss">conda <span class="hljs-keyword">create</span> -n <span class="hljs-keyword">open</span>-mmlab python=<span class="hljs-number">3.8</span> -y  <br>conda activate <span class="hljs-keyword">open</span>-mmlab<br></code></pre></td></tr></table></figure><h4 id="2-Install-GPU-version-Pytorch"><a href="#2-Install-GPU-version-Pytorch" class="headerlink" title="2. Install GPU-version Pytorch"></a>2. Install GPU-version Pytorch</h4><p><strong>Method 1:</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip</span> install torch==<span class="hljs-number">1</span>.<span class="hljs-number">10</span>.<span class="hljs-number">0</span>+cu113 torchvision==<span class="hljs-number">0</span>.<span class="hljs-number">11</span>.<span class="hljs-number">0</span>+cu113 torchaudio==<span class="hljs-number">0</span>.<span class="hljs-number">10</span>.<span class="hljs-number">0</span> -f https://download.pytorch.org/whl/torch_stable.html<br></code></pre></td></tr></table></figure><p><strong>Method 2:</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">conda</span> install pytorch==<span class="hljs-number">1</span>.<span class="hljs-number">10</span>.<span class="hljs-number">0</span> torchvision==<span class="hljs-number">0</span>.<span class="hljs-number">11</span>.<span class="hljs-number">0</span> torchaudio==<span class="hljs-number">0</span>.<span class="hljs-number">10</span>.<span class="hljs-number">0</span> cudatoolkit=<span class="hljs-number">11</span>.<span class="hljs-number">3</span> -c https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/linux-<span class="hljs-number">64</span>/<br></code></pre></td></tr></table></figure><h4 id="3-Install-mmcv-full-mmdet-and-mmsegmentation"><a href="#3-Install-mmcv-full-mmdet-and-mmsegmentation" class="headerlink" title="3. Install mmcv-full, mmdet, and mmsegmentation"></a>3. Install mmcv-full, mmdet, and mmsegmentation</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip</span> install mmcv-full==<span class="hljs-number">1</span>.<span class="hljs-number">4</span>.<span class="hljs-number">0</span> -f https://download.openmmlab.com/mmcv/dist/cu113/torch1.<span class="hljs-number">10</span>.<span class="hljs-number">0</span>/index.html<br><span class="hljs-attribute">pip</span> install mmdet==<span class="hljs-number">2</span>.<span class="hljs-number">14</span>.<span class="hljs-number">0</span> mmsegmentation==<span class="hljs-number">0</span>.<span class="hljs-number">14</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="4-Install-Dependency"><a href="#4-Install-Dependency" class="headerlink" title="4. Install Dependency"></a>4. Install Dependency</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip</span> install ninja tensorboard==<span class="hljs-number">2</span>.<span class="hljs-number">13</span>.<span class="hljs-number">0</span> nuscenes-devkit==<span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">10</span> scikit-image==<span class="hljs-number">0</span>.<span class="hljs-number">19</span>.<span class="hljs-number">0</span> lyft-dataset-sdk==<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">pip</span> install numpy==<span class="hljs-number">1</span>.<span class="hljs-number">19</span>.<span class="hljs-number">5</span> pandas==<span class="hljs-number">1</span>.<span class="hljs-number">4</span>.<span class="hljs-number">4</span> llvmlite==<span class="hljs-number">0</span>.<span class="hljs-number">31</span>.<span class="hljs-number">0</span> setuptools==<span class="hljs-number">59</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span> yapf==<span class="hljs-number">0</span>.<span class="hljs-number">40</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">conda</span> install -c omgarcia gcc-<span class="hljs-number">6</span> # gcc-<span class="hljs-number">6</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h4 id="5-Set-CUDA-Path-Important"><a href="#5-Set-CUDA-Path-Important" class="headerlink" title="5. Set CUDA Path (Important)"></a>5. Set CUDA Path (Important)</h4><p><strong>Exit current environment</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">conda deactivate</span><br></code></pre></td></tr></table></figure><p><strong>Download and intall CUDA 11.3 (assume you are not root user)</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://developer.download.nvidia.com/compute/cuda/<span class="hljs-number">11</span>.<span class="hljs-number">3</span>.<span class="hljs-number">0</span>/local_installers/cuda_11.<span class="hljs-number">3</span>.<span class="hljs-number">0</span>_465.<span class="hljs-number">19</span>.<span class="hljs-number">01</span>_linux.run<br><span class="hljs-attribute">sh</span> cuda_11.<span class="hljs-number">3</span>.<span class="hljs-number">0</span>_465.<span class="hljs-number">19</span>.<span class="hljs-number">01</span>_linux.run<br></code></pre></td></tr></table></figure><p><strong>Wait until interface appears (ignore the wrong version below, yours should be 11.3)</strong></p><img src="/blog/2024/08/09/bevformer/image.png" class="" title="alt text"><p><strong>Accept and continue</strong></p><img src="/blog/2024/08/09/bevformer/image-1.png" class="" title="alt text"><p><strong>Cancel the first option (press enter), and select options, modify the cuda installation path to yours, otherwise you donâ€™t have enough permission</strong></p><img src="/blog/2024/08/09/bevformer/image-2.png" class="" title="alt text"><p><strong>Set CUDA path</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Switch CUDA version when activate open-mmlab</span><br><span class="hljs-built_in">mkdir</span> -p /home/[username]/anaconda3/envs/open-mmlab/etc/conda/activate.d<br>vim /home/[username]/anaconda3/envs/open-mmlab/etc/conda/activate.d/activate.sh<br><br><span class="hljs-comment"># Insert following content</span><br>ORIGINAL_CUDA_HOME=<span class="hljs-variable">$CUDA_HOME</span><br>ORIGINAL_LD_LIBRARY_PATH=<span class="hljs-variable">$LD_LIBRARY_PATH</span><br><span class="hljs-built_in">export</span> CUDA_HOME=[your installed cuda path]/cuda-11.3<br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=<span class="hljs-variable">$CUDA_HOME</span>/lib64:<span class="hljs-variable">$LD_LIBRARY_PATH</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$CUDA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><br><span class="hljs-comment"># Recover CUDA version when deactivate open-mmlab</span><br><span class="hljs-built_in">mkdir</span> -p /home/[username]/anaconda3/envs/open-mmlab/etc/conda/deactivate.d<br>vim /home/[username]/anaconda3/envs/open-mmlab/etc/conda/deactivate.d/deactivate.sh<br><br><span class="hljs-comment"># Insert following content</span><br><span class="hljs-built_in">export</span> CUDA_HOME=<span class="hljs-variable">$ORIGINAL_CUDA_HOME</span><br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=<span class="hljs-variable">$ORIGINAL_LD_LIBRARY_PATH</span><br><span class="hljs-built_in">unset</span> ORIGINAL_CUDA_HOME<br><span class="hljs-built_in">unset</span> ORIGINAL_LD_LIBRARY_PATH<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$CUDA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p><strong>Enter virtual enironment and check CUDA version</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nsis">conda activate <span class="hljs-literal">open</span>-mmlab<br>nvcc -V<br><span class="hljs-comment"># Now you should see CUDA version is 11.3</span><br></code></pre></td></tr></table></figure><h4 id="6-Install-mmdet3d"><a href="#6-Install-mmdet3d" class="headerlink" title="6. Install mmdet3d"></a>6. Install mmdet3d</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> BEVFormer<br>git <span class="hljs-built_in">clone</span> https://github.com/open-mmlab/mmdetection3d.git<br><span class="hljs-built_in">cd</span> mmdetection3d<br>git checkout v0.17.1<br>pip install -v -e .<br></code></pre></td></tr></table></figure><h4 id="7-Install-Detectron2-Timm"><a href="#7-Install-Detectron2-Timm" class="headerlink" title="7. Install Detectron2, Timm"></a>7. Install Detectron2, Timm</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip</span> install einops fvcore seaborn iopath==<span class="hljs-number">0</span>.<span class="hljs-number">1</span>.<span class="hljs-number">9</span> timm==<span class="hljs-number">0</span>.<span class="hljs-number">6</span>.<span class="hljs-number">13</span>  typing-extensions==<span class="hljs-number">4</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span> pylint ipython==<span class="hljs-number">8</span>.<span class="hljs-number">12</span> numba==<span class="hljs-number">0</span>.<span class="hljs-number">48</span>.<span class="hljs-number">0</span> scikit-image==<span class="hljs-number">0</span>.<span class="hljs-number">19</span>.<span class="hljs-number">3</span> yapf==<span class="hljs-number">0</span>.<span class="hljs-number">40</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">python</span> -m pip install &#x27;git+https://github.com/facebookresearch/detectron2.git&#x27;<br></code></pre></td></tr></table></figure><p><strong>Now everything should be fine! :-)</strong></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://blog.csdn.net/newbie_dqt/article/details/134766294">https://blog.csdn.net/newbie_dqt/article/details/134766294</a><br>[2] <a href="https://blog.csdn.net/weixin_45944960/article/details/130000445">https://blog.csdn.net/weixin_45944960/article/details/130000445</a><br>[3] <a href="https://blog.csdn.net/Mr__George/article/details/106984574">https://blog.csdn.net/Mr__George/article/details/106984574</a><br>[4] <a href="https://blog.csdn.net/qq_40677266/article/details/121322583">https://blog.csdn.net/qq_40677266/article/details/121322583</a></p>]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Yihang Tao open his blog today!</title>
    <link href="/blog/2024/08/09/hello/"/>
    <url>/blog/2024/08/09/hello/</url>
    
    <content type="html"><![CDATA[<p>Yihang Tao finally created his personal blog and decided to write something today. Thanks to Hexo and Fluid theme template!</p>]]></content>
    
    
    <categories>
      
      <category>Daily</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Event</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
